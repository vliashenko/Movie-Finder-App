{"version":3,"file":"static/js/Review.55785085.chunk.js","mappings":"gTAAMA,EAAW,+BACXC,EAAW,mCACJC,EAAW,sCAAjB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAuCC,EAAvC,+BAA6C,GAAIC,EAAjD,+BAA0D,GAA1D,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OAAIH,EAAJ,qCAAyCC,IAGnE,SAASa,EAAoBC,GAChC,OAAOZ,EAAuB,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,iCAAsEc,EAAtE,gCAG1B,SAASC,EAAeC,GAC3B,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,oBAAyChB,EAAzC,oBAG1B,SAASiB,EAAiBD,GAC7B,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,4BAAiDhB,EAAjD,oBAG1B,SAASkB,EAAiBF,GAC7B,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,4BAAiDhB,EAAjD,6B,mDCNjC,IAnBqB,WACjB,IAAMmB,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACNC,YAAW,WACPH,EAAS,IAAK,CAAEI,SAAS,MAC3B,OACJ,CAACJ,KAGC,gBAAIK,MAAO,CAAEC,UAAW,UAAxB,gCAEI,oF,yGCOZ,EAlB4B,WACxB,IAAMT,GAAUU,EAAAA,EAAAA,MAEhB,GAA8BC,EAAAA,EAAAA,UAAS,QAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAzC,eAAQG,EAAR,KAAiBC,EAAjB,KAWA,OATAV,EAAAA,EAAAA,YAAU,WACNQ,EAAU,WACVG,EAAAA,GACsBhB,GACjBiB,KAAKF,GACLE,KAAKJ,EAAU,aACfK,OAAM,SAAAC,GAAK,OAAIN,EAAU,iBAChC,CAACb,IAEI,CAAEc,QAAAA,EAASF,OAAAA,I,iBClBtB,EAA6B,+BCA7B,EAAiC,uCAAjC,EAAiF,+BAAjF,EAAyH,+B,SCwBzH,EAtBuB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACdC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACI,iBAAKC,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,SACKH,KAGL,eAAGE,UAAWC,EAAd,qBACaF,SCkCzB,EAvCmB,WACf,IAc0B,IAd1B,EAA2BG,IAApBb,EAAP,EAAOA,OAAQE,EAAf,EAAeA,QAEf,MAAc,SAAXF,GAAgC,YAAXA,GAEhB,SAACc,EAAA,EAAD,IAIM,aAAXd,GAEK,SAACe,EAAA,EAAD,IAIM,aAAXf,GAEK,iCACI,mBACA,eAAIW,UAAWC,EAAf,UAEe,OAAPV,QAAO,IAAPA,GAAA,UAAAA,EAASc,eAAT,eAAkBC,QAAS,EAA3B,OACIf,QADJ,IACIA,GADJ,UACIA,EAASc,eADb,aACI,EAAkBE,KAAI,SAAAV,GAAM,OAC5B,SAAC,EAAD,CAAgCA,OAAQA,GAAnBA,EAAOW,QAE9B,0DAVtB,GCZJ,EARmB,WACf,OACI,0BACI,SAAC,EAAD","sources":["services/themoviedbAPI.js","view/NotFoundView.js","hooks/useFetchReviewsById.js","webpack://movie-finder-app/./src/components/ReviewList/ReviewList.module.css?fe39","webpack://movie-finder-app/./src/components/ReviewListItem/ReviewListItem.module.css?7714","components/ReviewListItem/ReviewListItem.js","components/ReviewList/ReviewList.js","view/ReviewView.js"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst BASE_KEY = \"8c2f1cd8692a539e3bea9ae95f68229a\";\nexport const BASE_IMG = \"https://image.tmdb.org/t/p/original\";\n\nasync function FetchWithErrorHandling( url = \"\", config = {} ) {\n    const response = await fetch(url, config);\n    return response.ok \n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"))\n}\n\nexport function fetchTrendingMovies() {\n    return FetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${BASE_KEY}`);\n};\n\nexport function fetchMoviesBySearch(query) {\n    return FetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${BASE_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n};\n\nexport function fetchMovieById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}&language=en-US`)\n}\n\nexport function fetchCreditsById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}&language=en-US`)\n}\n\nexport function fetchReviewsById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&language=en-US&page=1`)\n}","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst NotFoundView = () => {\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        setTimeout(()=> {\n            navigate(\"/\", { replace: true })\n        },2000)\n    },[navigate])\n\n    return (\n        <h1 style={{ textAlign: \"center\" }}>\n            404 Page not found\n            <p>\n                You will be automaticly redirected to the Home Page\n            </p>\n        </h1>\n    );\n};\n\nexport default NotFoundView;","import { useState, useEffect } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport * as ThemoviedbAPI from \"../services/themoviedbAPI\";\n\nconst useFetchReviewsById = () => {\n    const movieId = useOutletContext();\n\n    const [ status, setStatus ] = useState(\"idle\");\n    const [ reviews, setReviews ] = useState(null);\n\n    useEffect(() => {\n        setStatus(\"pending\");\n        ThemoviedbAPI\n            .fetchReviewsById(movieId)\n            .then(setReviews)\n            .then(setStatus(\"resolved\"))\n            .catch(error => setStatus(\"rejected\"))\n    },[movieId]);\n   \n    return { reviews, status}\n};\n\nexport default useFetchReviewsById;","// extracted by mini-css-extract-plugin\nexport default {\"ReviewList\":\"ReviewList_ReviewList__GBhL7\"};","// extracted by mini-css-extract-plugin\nexport default {\"ReviewListItem\":\"ReviewListItem_ReviewListItem__o0bWY\",\"Author\":\"ReviewListItem_Author__kfNdP\",\"Review\":\"ReviewListItem_Review__CCya4\"};","import styles from \"./ReviewListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ReviewListItem = ({ review }) => {\n    const { author, content } = review;\n    return (\n        <div className={styles.ReviewListItem}>\n            <p className={styles.Author}>\n                {author}    \n            </p>\n\n            <q className={styles.Review}>\n                Author: {content}\n            </q>\n        </div>\n    );\n};\n\nReviewListItem.propTypes = {\n    review: PropTypes.shape({\n        author: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired        \n    }) \n}\n\nexport default ReviewListItem;","import useFetchReviewsById from \"hooks/useFetchReviewsById\";\nimport Loader from \"components/Loader/Loader\";\nimport NotFoundView from \"view/NotFoundView\";\nimport styles from \"./ReviewList.module.css\"\nimport ReviewListItem from \"components/ReviewListItem/ReviewListItem\";\nimport PropTypes from \"prop-types\";\n\nconst ReviewList = () => {\n    const {status, reviews } = useFetchReviewsById();\n\n    if(status === \"idle\" || status === \"pending\") {\n        return (\n            <Loader/>\n        )\n    };\n\n    if(status === \"rejected\") {\n        return (\n            <NotFoundView/>\n        )\n    };\n\n    if(status === \"resolved\") {\n        return (\n            <>\n                <hr />\n                <ul className={styles.ReviewList}>\n                    {\n                        reviews?.results?.length > 0\n                        ?   reviews?.results?.map(review => (\n                            <ReviewListItem key={review.id} review={review}/>\n                        ))\n                        : <h3>No reviews was left</h3>\n                    }\n                </ul>\n            </>\n        );\n    }\n};\n\nReviewList.propTypes = {\n    reviews: PropTypes.arrayOf(PropTypes.shape({  \n        id: PropTypes.number.isRequired\n    }))\n}\n\nexport default ReviewList;","import ReviewList from \"components/ReviewList/ReviewList\";\n\nconst ReviewView = () => {\n    return (\n        <div>\n            <ReviewList/>\n        </div>\n    );\n};\n\nexport default ReviewView;"],"names":["BASE_URL","BASE_KEY","BASE_IMG","FetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesBySearch","query","fetchMovieById","movieId","fetchCreditsById","fetchReviewsById","navigate","useNavigate","useEffect","setTimeout","replace","style","textAlign","useOutletContext","useState","status","setStatus","reviews","setReviews","ThemoviedbAPI","then","catch","error","review","author","content","className","styles","useFetchReviewsById","Loader","NotFoundView","results","length","map","id"],"sourceRoot":""}