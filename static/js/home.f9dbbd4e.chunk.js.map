{"version":3,"file":"static/js/home.f9dbbd4e.chunk.js","mappings":"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","sources":["services/themoviedbAPI.js","hooks/useFetchTrendingList.js","webpack://movie-finder-app/./src/components/TrendingListItem/TrendingListItem.module.css?4629","components/TrendingListItem/TrendingListItem.js","webpack://movie-finder-app/./src/components/TrendingList/TrendingList.module.css?033c","components/TrendingList/TrendingList.js","view/HomeView.js","view/NotFoundView.js"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst BASE_KEY = \"8c2f1cd8692a539e3bea9ae95f68229a\";\nexport const BASE_IMG = \"https://image.tmdb.org/t/p/original\";\n\nasync function FetchWithErrorHandling( url = \"\", config = {} ) {\n    const response = await fetch(url, config);\n    return response.ok \n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"))\n}\n\nexport function fetchTrendingMovies() {\n    return FetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${BASE_KEY}`);\n};\n\nexport function fetchMoviesBySearch(query) {\n    return FetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${BASE_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n};\n\nexport function fetchMovieById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}&language=en-US`)\n}\n\nexport function fetchCreditsById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}&language=en-US`)\n}\n\nexport function fetchReviewsById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&language=en-US&page=1`)\n}","import { useState, useEffect } from 'react';\nimport * as ThemoviedbAPI from \"../services/themoviedbAPI\";\n\nconst useFetchTrendingList = () => {\n\n    const [ movies, setMovies ] = useState(null);\n    const [ status, setStatus ] = useState(\"idle\");\n\n    useEffect(() => {\n        setStatus(\"pending\")\n        ThemoviedbAPI\n            .fetchTrendingMovies()\n            .then(setMovies)\n            .then(setStatus(\"resolved\"))\n            .catch(error => setStatus(\"rejected\"))\n    },[])\n\n    return { status, movies }\n};\n\nexport default useFetchTrendingList;","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"TrendingListItem_Item__vOYE6\",\"Link\":\"TrendingListItem_Link__sEHRi\",\"Container\":\"TrendingListItem_Container__jSTV8\",\"Img\":\"TrendingListItem_Img__rgMcc\",\"Title\":\"TrendingListItem_Title__RRBI7\"};","import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { BASE_IMG } from 'services/themoviedbAPI';\nimport styles from \"./TrendingListItem.module.css\"\nimport PropTypes from \"prop-types\";\n\nconst TrendingListItem = ({ movies, location }) => {\n    \n    return (\n        <>\n            {movies.map(movie =>{\n                const { id, backdrop_path, title, name } = movie;\n                return (\n                    <li \n                        className={styles.Item}\n                        key={id}\n                    >\n                        <Link \n                            to={`movies/${movie.id}`}\n                            state={{from: location}}\n                            className={styles.Link} \n                        >\n                            <div className={styles.Container}>\n                                <img \n                                    className={styles.Img}\n                                    src={`${BASE_IMG}${backdrop_path}`} \n                                    alt={title ?? name} \n                                />\n                                <p className={styles.Title}>\n                                    {title ?? name}\n                                </p>\n                            </div>\n                        </Link>\n                        \n                    </li>\n            )})}\n        </>\n    );\n};\n\nTrendingListItem.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        backdrop_path: PropTypes.string.isRequired,\n        title: PropTypes.string || null.isRequired,\n        name: PropTypes.string || null.isRequired\n    }))\n}\n\nexport default TrendingListItem;","// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"TrendingList_Title__pxb+h\",\"MovieList\":\"TrendingList_MovieList__TkSj-\"};","import useFetchTrendingList from 'hooks/useFetchTrendingList';\nimport { useLocation } from \"react-router-dom\";\nimport TrendingListItem from 'components/TrendingListItem/TrendingListItem';\nimport Loader from 'components/Loader/Loader';\nimport NotFoundView from 'view/NotFoundView';\nimport styles from \"./TrendingList.module.css\"\nimport PropTypes from \"prop-types\";\n\nconst TrendingList = () => {\n\n    const location = useLocation();\n    const { status, movies } = useFetchTrendingList();\n\n    if(status === \"idle\" || status === \"pending\"){\n        return (\n            <Loader/>\n        )\n    }\n\n    if(status === \"rejected\"){\n        return (\n            <NotFoundView/>\n        )\n    }\n    if(status === \"resolved\"){\n        return (\n            <>\n                <p className={styles.Title}>\n                    Trending today\n                </p>\n            \n                <ul className={styles.MovieList}>\n                    {movies && <TrendingListItem movies={movies.results} location={location}/>}\n                </ul>\n            </>\n        )\n    }\n};\n\nTrendingList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object.isRequired)\n}\n\nexport default TrendingList;","import React from 'react';\nimport TrendingList from 'components/TrendingList/TrendingList';\n\nconst HomeView = () => {\n    return (\n        <div>\n            <TrendingList/>\n        </div>\n    );\n};\n\nexport default HomeView;","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst NotFoundView = () => {\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        setTimeout(()=> {\n            navigate(\"/\", { replace: true })\n        },2000)\n    },[navigate])\n\n    return (\n        <h1 style={{ textAlign: \"center\" }}>\n            404 Page not found\n            <p>\n                You will be automaticly redirected to the Home Page\n            </p>\n        </h1>\n    );\n};\n\nexport default NotFoundView;"],"names":["BASE_URL","BASE_KEY","BASE_IMG","FetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesBySearch","query","fetchMovieById","movieId","fetchCreditsById","fetchReviewsById","useState","movies","setMovies","status","setStatus","useEffect","ThemoviedbAPI","then","catch","error","location","map","movie","id","backdrop_path","title","name","className","styles","to","state","from","src","alt","useLocation","useFetchTrendingList","Loader","NotFoundView","results","navigate","useNavigate","setTimeout","replace","style","textAlign"],"sourceRoot":""}