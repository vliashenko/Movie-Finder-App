{"version":3,"file":"static/js/Movie.883ba4d9.chunk.js","mappings":"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","sources":["services/themoviedbAPI.js","hooks/useFetchMovieById.js","webpack://movie-finder-app/./src/components/MovieInfoItem/MovieInfoItem.module.css?d901","components/MovieInfoItem/MovieInfoItem.js","webpack://movie-finder-app/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.js","components/MovieInfo/MovieInfo.js","view/MovieView.js","view/NotFoundView.js"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst BASE_KEY = \"8c2f1cd8692a539e3bea9ae95f68229a\";\r\nexport const BASE_IMG = \"https://image.tmdb.org/t/p/original\";\r\n\r\nasync function FetchWithErrorHandling( url = \"\", config = {} ) {\r\n    const response = await fetch(url, config);\r\n    return response.ok \r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"))\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n    return FetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${BASE_KEY}`);\r\n};\r\n\r\nexport function fetchMoviesBySearch(query) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${BASE_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\r\n};\r\n\r\nexport function fetchMovieById(movieId) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}&language=en-US`)\r\n}\r\n\r\nexport function fetchCreditsById(movieId) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}&language=en-US`)\r\n}\r\n\r\nexport function fetchReviewsById(movieId) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&language=en-US&page=1`)\r\n}","import * as ThemoviedbAPI from \"../services/themoviedbAPI\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useFetchMovieById = () => {\r\n    const params = useParams();\r\n    const movieId = params.id;\r\n\r\n    const [ status, setStatus ] = useState(\"idle\");\r\n    const [ movie, setMovie ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setStatus(\"pending\");\r\n        ThemoviedbAPI\r\n            .fetchMovieById(movieId)\r\n            .then(setMovie)\r\n            .then(setStatus(\"resolved\"))\r\n            .catch(error => setStatus(\"rejected\"))\r\n    },[movieId])\r\n\r\n    return { status, movie, movieId }\r\n};\r\n\r\nexport default useFetchMovieById;","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"MovieInfoItem_Container__XIVR9\",\"Wrapper\":\"MovieInfoItem_Wrapper__ryLLD\",\"SubWrapper\":\"MovieInfoItem_SubWrapper__+d3UN\",\"ButtonBack\":\"MovieInfoItem_ButtonBack__AbTOw\",\"ContainerImg\":\"MovieInfoItem_ContainerImg__QMvEG\",\"Img\":\"MovieInfoItem_Img__7oUQv\",\"Title\":\"MovieInfoItem_Title__vu7b-\",\"Info\":\"MovieInfoItem_Info__fCMjr\",\"SubTitle\":\"MovieInfoItem_SubTitle__L8O7G\",\"Genres\":\"MovieInfoItem_Genres__PqO4B\"};","import { useNavigate } from \"react-router-dom\"\r\nimport { BASE_IMG } from \"services/themoviedbAPI\";\r\nimport movieImage from \"../../images/cast.jpg\";\r\nimport styles from \"./MovieInfoItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MovieInfoItem = ({ movie, prevLocation }) => {\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const GoBack = () => {\r\n        navigate(prevLocation?.state?.from ?? \"/\")\r\n    };\r\n\r\n    const {vote_average, name, title, release_date, backdrop_path, overview, genres} = movie;\r\n    const userScore = Math.floor((vote_average / 10) * 100) + \"%\";\r\n    const releaseYear = release_date.slice(0,4)\r\n    const image = backdrop_path === null ? movieImage : `${BASE_IMG}${backdrop_path}`\r\n\r\n    \r\n    return (\r\n        <div className={styles.Container}>\r\n            <button \r\n                onClick={GoBack}\r\n                className={styles.ButtonBack}\r\n            >\r\n                Go Back\r\n            </button>\r\n\r\n            <div className={styles.Wrapper}>\r\n                <div className={styles.ContainerImg}>\r\n                    <img \r\n                        className={styles.Img}\r\n                        src={image} \r\n                        alt={name || title} \r\n                    />\r\n                </div>\r\n\r\n                <div className={styles.SubWrapper}>\r\n                    <p className={styles.Title}>\r\n                        {title || name} ({releaseYear})\r\n                    </p>\r\n\r\n                    <p className={styles.Info}>\r\n                        User Score: {userScore}\r\n                    </p>\r\n\r\n                    <p className={styles.SubTitle}>\r\n                        Overview\r\n                    </p>\r\n\r\n                    <p className={styles.Info}>\r\n                        {overview}\r\n                    </p>\r\n\r\n                    <p className={styles.SubTitle}>\r\n                        Genres\r\n                    </p>\r\n\r\n                    <p className={styles.Info}>\r\n                        {genres.map(genres => {\r\n                            const { id, name } = genres;\r\n                            return (\r\n                                <b\r\n                                    key={id} \r\n                                    className={styles.Genres}>\r\n                                    {name}\r\n                                </b>\r\n                            )\r\n                        })}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nMovieInfoItem.propTypes = {\r\n    movie: PropTypes.shape({\r\n        vote_average: PropTypes.number || undefined.isRequired,\r\n        name: PropTypes.string || undefined.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        release_date: PropTypes.string.isRequired,\r\n        backdrop_path: PropTypes.string.isRequired,\r\n        overview: PropTypes.string.isRequired,\r\n\r\n        genres: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired\r\n        })),\r\n        \r\n        prevLocation: PropTypes.objectOf(PropTypes.string.isRequired) || undefined.isRequired\r\n    })\r\n}\r\n\r\nexport default MovieInfoItem;","// extracted by mini-css-extract-plugin\nexport default {\"AdditionalInfo\":\"AdditionalInfo_AdditionalInfo__9G5Dy\",\"NavLink\":\"AdditionalInfo_NavLink__4CXLs\",\"ActivatedLink\":\"AdditionalInfo_ActivatedLink__Ry-IJ\"};","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\nimport styles from \"./AdditionalInfo.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AdditionalInfo = ({ movieId, title, prevLocation }) => {\r\n\r\n    const active = (e) => {\r\n        return e.isActive === true \r\n          ? styles.ActivatedLink \r\n          : styles.NavLink\r\n      }\r\n\r\n    return (\r\n        <div className={styles.AdditionalInfo}>\r\n            <hr />\r\n            <h3>{title}</h3>\r\n\r\n            <NavLink \r\n                to={`/movies/${movieId}/cast`}\r\n                state={{ from: prevLocation?.state?.from }}\r\n                className={active}\r\n            >\r\n                Cast\r\n            </NavLink>\r\n\r\n            <NavLink \r\n                to={`/movies/${movieId}/reviews`}\r\n                state={{ from: prevLocation?.state?.from }}\r\n                className={active}\r\n            >\r\n                Reviews\r\n            </NavLink>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nAdditionalInfo.propTypes = {\r\n    movieId: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    prevLocation: PropTypes.shape({\r\n        state: PropTypes.shape({\r\n            from: PropTypes.objectOf(PropTypes.string).isRequired\r\n        }).isRequired\r\n    }).isRequired\r\n}\r\nexport default AdditionalInfo;","import { useLocation, Outlet } from \"react-router-dom\";\r\nimport useFetchMovieById from 'hooks/useFetchMovieById';\r\nimport Loader from 'components/Loader/Loader';\r\nimport NotFoundView from 'view/NotFoundView';\r\nimport MovieInfoItem from 'components/MovieInfoItem/MovieInfoItem';\r\nimport AdditionalInfo from \"components/AdditionalInfo/AdditionalInfo\";\r\n\r\nconst MovieInfo = () => {\r\n\r\n    const { status, movie, movieId } = useFetchMovieById();\r\n\r\n    const location = useLocation();\r\n\r\n\r\n    if(status ===\"idle\" || status === \"pending\") {\r\n        return (\r\n            <Loader/>\r\n        )\r\n    };\r\n\r\n    if(status === \"rejected\") {\r\n        return (\r\n            <NotFoundView/>\r\n        )\r\n    };\r\n\r\n    if(status === \"resolved\") {\r\n        return (\r\n            <>\r\n                {movie !== null && (\r\n                    <>\r\n                        <MovieInfoItem movie={movie} prevLocation={location}/>\r\n                        <AdditionalInfo movieId={movieId} title=\"Additional Information\" prevLocation={location}/>\r\n                        <Outlet context={movieId} />\r\n                    </>\r\n                )}\r\n\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MovieInfo;","import React from 'react';\r\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\r\n\r\nconst MovieView = () => {\r\n    return (\r\n        <div>\r\n            <MovieInfo/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieView;","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NotFoundView = () => {\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=> {\r\n            navigate(\"/\", { replace: true })\r\n        },2000)\r\n    },[navigate])\r\n\r\n    return (\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n            404 Page not found\r\n            <p>\r\n                You will be automaticly redirected to the Home Page\r\n            </p>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default NotFoundView;"],"names":["BASE_URL","BASE_KEY","BASE_IMG","FetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesBySearch","query","fetchMovieById","movieId","fetchCreditsById","fetchReviewsById","useParams","id","useState","status","setStatus","movie","setMovie","useEffect","ThemoviedbAPI","then","catch","error","prevLocation","navigate","useNavigate","vote_average","name","title","release_date","backdrop_path","overview","genres","userScore","Math","floor","releaseYear","slice","image","movieImage","className","styles","onClick","state","from","src","alt","map","active","e","isActive","to","useFetchMovieById","location","useLocation","Loader","NotFoundView","context","setTimeout","replace","style","textAlign"],"sourceRoot":""}