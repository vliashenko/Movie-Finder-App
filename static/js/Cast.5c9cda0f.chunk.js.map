{"version":3,"file":"static/js/Cast.5c9cda0f.chunk.js","mappings":"gTAAMA,EAAW,+BACXC,EAAW,mCACJC,EAAW,sCAAjB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAuCC,EAAvC,+BAA6C,GAAIC,EAAjD,+BAA0D,GAA1D,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OAAIH,EAAJ,qCAAyCC,IAGnE,SAASa,EAAoBC,GAChC,OAAOZ,EAAuB,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,iCAAsEc,EAAtE,gCAG1B,SAASC,EAAeC,GAC3B,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,oBAAyChB,EAAzC,oBAG1B,SAASiB,EAAiBD,GAC7B,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,4BAAiDhB,EAAjD,oBAG1B,SAASkB,EAAiBF,GAC7B,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,4BAAiDhB,EAAjD,6B,yGCLjC,EAnByB,WAErB,IAAMgB,GAAUG,EAAAA,EAAAA,MAEhB,GAA8BC,EAAAA,EAAAA,UAAS,QAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAQG,EAAR,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACNH,EAAU,WACVI,EAAAA,GACsBV,GACjBW,KAAKH,GACLG,KAAKL,EAAU,aACfM,OAAM,SAAAC,GAAK,OAAIP,EAAU,iBAC/B,CAACN,IAEG,CAAEO,KAAAA,EAAMF,OAAAA,I,0BCnBnB,EAAuB,uBAAvB,EAA6D,+BAA7D,EAAkG,sBAAlG,EAA+H,uB,SCuC/H,EAnCiB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OAERC,EAA2CD,EAA3CC,aAAcC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UAE/BC,EAAyB,OAAjBH,EAAwBI,EAAxB,UAAuClC,EAAAA,IAAvC,OAAkD8B,GAEhE,OACI,iBAAKK,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBACIC,IAAKJ,EACLK,IAAKP,EACLI,UAAWC,OAInB,cAAGD,UAAWC,EAAd,SACKL,KAGL,cAAGI,UAAWC,EAAd,SACKJ,QCzBjB,EAA2B,2BC0C3B,EApCiB,WACb,IAe0B,EAf1B,EAAyBO,IAAjBjB,EAAR,EAAQA,KAAMF,EAAd,EAAcA,OAGd,MAAa,SAAVA,GAA+B,YAAXA,GAEf,SAACoB,EAAA,EAAD,IAIM,aAAXpB,GAEK,SAACqB,EAAA,EAAD,IAIM,aAAXrB,GAEK,iCACA,mBACI,eAAIe,UAAWC,EAAf,gBACKd,QADL,IACKA,GADL,UACKA,EAAMA,YADX,aACK,EAAYoB,KAAI,SAACb,GAAD,OACb,SAAC,EAAD,CAA0BA,OAAQA,GAAnBA,EAAOc,iBAN1C,GCbJ,EARiB,WACb,OACI,0BACI,SAAC,EAAD,Q,mDCiBZ,IAnBqB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OANArB,EAAAA,EAAAA,YAAU,WACNsB,YAAW,WACPF,EAAS,IAAK,CAAEG,SAAS,MAC3B,OACJ,CAACH,KAGC,gBAAII,MAAO,CAAEC,UAAW,UAAxB,gCAEI,oF","sources":["services/themoviedbAPI.js","hooks/useFetchCastById.js","webpack://movie-finder-app/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.js","webpack://movie-finder-app/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.js","view/CastView.js","view/NotFoundView.js"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst BASE_KEY = \"8c2f1cd8692a539e3bea9ae95f68229a\";\nexport const BASE_IMG = \"https://image.tmdb.org/t/p/original\";\n\nasync function FetchWithErrorHandling( url = \"\", config = {} ) {\n    const response = await fetch(url, config);\n    return response.ok \n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"))\n}\n\nexport function fetchTrendingMovies() {\n    return FetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${BASE_KEY}`);\n};\n\nexport function fetchMoviesBySearch(query) {\n    return FetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${BASE_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n};\n\nexport function fetchMovieById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}&language=en-US`)\n}\n\nexport function fetchCreditsById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}&language=en-US`)\n}\n\nexport function fetchReviewsById(movieId) {\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&language=en-US&page=1`)\n}","import { useState, useEffect } from \"react\";\nimport { useOutletContext } from \"react-router-dom\"\nimport * as ThemoviedbAPI from \"../services/themoviedbAPI\";\n\nconst useFetchCastById = () => {\n    \n    const movieId = useOutletContext();\n\n    const [ status, setStatus ] = useState(\"idle\");\n    const [ cast, setCast ] = useState(null);\n\n    useEffect(() => {\n        setStatus(\"pending\");\n        ThemoviedbAPI\n            .fetchCreditsById(movieId)\n            .then(setCast)\n            .then(setStatus(\"resolved\"))\n            .catch(error => setStatus(\"rejected\"))\n    }, [movieId])\n\n    return { cast, status }\n};\n\nexport default useFetchCastById;","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"CastItem_Item__mlK7i\",\"ContainerImg\":\"CastItem_ContainerImg__d2EHJ\",\"Img\":\"CastItem_Img__7u4A8\",\"Name\":\"CastItem_Name__QY817\"};","import { BASE_IMG } from \"services/themoviedbAPI\";\nimport castImage from \"../../images/cast.jpg\";\nimport styles from \"./CastItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst CastItem = ({ member }) => {\n\n    const { profile_path, original_name, character } = member;\n    \n    const image = profile_path === null ? castImage : `${BASE_IMG}${profile_path}`\n      \n    return (\n        <div className={styles.Item}>\n            <div className={styles.ContainerImg}>\n                <img \n                    src={image} \n                    alt={original_name} \n                    className={styles.Img}\n                />\n            </div>\n\n            <p className={styles.Name}>\n                {original_name}\n            </p>\n\n            <p className={styles.Name}>\n                {character}\n            </p>\n        </div>\n    );\n};\n\nCastItem.propTypes = {\n    member: PropTypes.shape({\n        profile_path: PropTypes.string || null.isRequired,\n        original_name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired\n    })\n}\n\nexport default CastItem;","// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"CastList_CastList__G2Wj2\"};","import useFetchCastById from \"hooks/useFetchCastById\";\nimport Loader from \"components/Loader/Loader\";\nimport NotFoundView from \"view/NotFoundView\";\nimport CastItem from \"components/CastItem/CastItem\";\nimport styles from \"./CastList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst CastList = () => {\n    const { cast, status } = useFetchCastById();\n\n\n    if(status ===\"idle\" || status === \"pending\") {\n        return (\n            <Loader/>\n        )\n    };\n\n    if(status === \"rejected\") {\n        return (\n            <NotFoundView/>\n        )\n    };\n\n    if(status === \"resolved\") {\n        return (\n            <>\n            <hr />\n                <ul className={styles.CastList}>\n                    {cast?.cast?.map((member) => (\n                        <CastItem key={member.id} member={member}/>\n                    ))}\n                </ul>\n            </>\n        )\n    };\n};\n\nCastList.propTypes = {\n    member: PropTypes.shape({\n        id: PropTypes.number.isRequired\n    })\n}\n\nexport default CastList;","import CastList from \"components/CastList/CastList\";\n\nconst CastView = () => {\n    return (\n        <div>\n            <CastList/>\n        </div>\n    );\n};\n\nexport default CastView;","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst NotFoundView = () => {\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        setTimeout(()=> {\n            navigate(\"/\", { replace: true })\n        },2000)\n    },[navigate])\n\n    return (\n        <h1 style={{ textAlign: \"center\" }}>\n            404 Page not found\n            <p>\n                You will be automaticly redirected to the Home Page\n            </p>\n        </h1>\n    );\n};\n\nexport default NotFoundView;"],"names":["BASE_URL","BASE_KEY","BASE_IMG","FetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesBySearch","query","fetchMovieById","movieId","fetchCreditsById","fetchReviewsById","useOutletContext","useState","status","setStatus","cast","setCast","useEffect","ThemoviedbAPI","then","catch","error","member","profile_path","original_name","character","image","castImage","className","styles","src","alt","useFetchCastById","Loader","NotFoundView","map","id","navigate","useNavigate","setTimeout","replace","style","textAlign"],"sourceRoot":""}