{"version":3,"file":"static/js/640.c9fa5353.chunk.js","mappings":"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","sources":["services/themoviedbAPI.js","view/NotFoundView.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/useFetchMoviesBySearch.js","webpack://movie-finder-app/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","webpack://movie-finder-app/./src/components/SearchList/SearchList.module.css?ca9f","components/SearchList/SearchList.js","components/Search/Search.js","view/SearchMovieView.js"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst BASE_KEY = \"8c2f1cd8692a539e3bea9ae95f68229a\";\r\nexport const BASE_IMG = \"https://image.tmdb.org/t/p/original\";\r\n\r\nasync function FetchWithErrorHandling( url = \"\", config = {} ) {\r\n    const response = await fetch(url, config);\r\n    return response.ok \r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"))\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n    return FetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${BASE_KEY}`);\r\n};\r\n\r\nexport function fetchMoviesBySearch(query) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${BASE_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\r\n};\r\n\r\nexport function fetchMovieById(movieId) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}&language=en-US`)\r\n}\r\n\r\nexport function fetchCreditsById(movieId) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}&language=en-US`)\r\n}\r\n\r\nexport function fetchReviewsById(movieId) {\r\n    return FetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&language=en-US&page=1`)\r\n}","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NotFoundView = () => {\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=> {\r\n            navigate(\"/\", { replace: true })\r\n        },2000)\r\n    },[navigate])\r\n\r\n    return (\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n            404 Page not found\r\n            <p>\r\n                You will be automaticly redirected to the Home Page\r\n            </p>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default NotFoundView;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport * as ThemoviedbAPI from \"../services/themoviedbAPI\";\r\n\r\nconst useFetchMoviesBySearch = () => {\r\n    const [ status, setStatus ] = useState(\"idle\");\r\n    const [ movies, setMovies ] = useState(null);\r\n    const [ query, setQuery ] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const renewSearch = new URLSearchParams(location.search).get(\"query\");;\r\n\r\n    useEffect(() => {\r\n        if(renewSearch) {\r\n            fetchMovies(renewSearch);\r\n            setQuery(renewSearch)\r\n        }\r\n    }, [renewSearch])\r\n\r\n    const setUrl = () => {\r\n        navigate({\r\n            ...location,\r\n            search: `query=${query}`\r\n        })\r\n    }\r\n        \r\n    const fetchMovies = (query) => {\r\n        setStatus(\"pending\");\r\n        if(query !== \"\")\r\n        ThemoviedbAPI\r\n            .fetchMoviesBySearch(query)\r\n            .then(setMovies)\r\n            .then(setStatus(\"resolved\"))\r\n            .catch(error => setStatus(\"rejected\"))\r\n    }\r\n        \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetchMovies(query);\r\n        setUrl();\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    return { query,movies, status, onChange, onSubmit, location }\r\n\r\n};\r\n\r\nexport default useFetchMoviesBySearch;","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"SearchForm_Form__VYfDJ\",\"Input\":\"SearchForm_Input__s1cqY\",\"Button\":\"SearchForm_Button__52QFg\"};","import styles from \"./SearchForm.module.css\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchForm = ({ query, onChange, onSubmit }) => {\r\n    return (\r\n        <form \r\n            className={styles.Form}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <input \r\n                className={styles.Input}\r\n                onChange={onChange}\r\n                value={query}\r\n                type=\"text\" \r\n            />\r\n\r\n            <button\r\n                type=\"button\"\r\n                className={styles.Button}\r\n            >\r\n                Search\r\n            </button>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nSearchForm.propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"Link\":\"SearchList_Link__3P1Ts\"};","import { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./SearchList.module.css\";\r\n\r\nconst SearchList = ({ location, movies }) => {\r\n    return (\r\n        <ul>\r\n            {movies.map(movie => {\r\n                return (\r\n                    <Link \r\n                        className={styles.Link}\r\n                        key={movie.id} \r\n                        to={`/movies/${movie.id}`} \r\n                        state={{from: location}}>\r\n                            <li className={styles.Link}>\r\n                                {movie.name || movie.title}\r\n                            </li>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nSearchList.propTypes = {\r\n    location: PropTypes.objectOf(PropTypes.string),\r\n    movies: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name:  PropTypes.string || undefined.isRequired,\r\n        title:  PropTypes.string || undefined.isRequired,        \r\n    }))\r\n}\r\n\r\nexport default SearchList;","import useFetchMoviesBySearch from \"hooks/useFetchMoviesBySearch\";\r\nimport SearchForm from \"components/SearchForm/SearchForm\";\r\nimport Loader from \"components/Loader/Loader\";\r\nimport NotFoundView from \"view/NotFoundView\";\r\nimport SearchList from \"components/SearchList/SearchList\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Search = () => {\r\n    const { query,movies, status, onChange, onSubmit, location } = useFetchMoviesBySearch();\r\n    \r\n    if(status === \"idle\") {\r\n        return (\r\n            <SearchForm query={query} onChange={onChange} onSubmit={onSubmit}/>\r\n        );\r\n    }\r\n\r\n    if(movies?.results?.length === 0) {\r\n        return (\r\n            <>\r\n                <SearchForm query={query} onChange={onChange} onSubmit={onSubmit}/>\r\n                <h1>\r\n                    No such movie found:(\r\n                </h1>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if(status === \"pending\") {\r\n        return (\r\n            <>\r\n                <SearchForm query={query} onChange={onChange} onSubmit={onSubmit}/>\r\n                <Loader/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if(status === \"rejected\") {\r\n        return (\r\n            <NotFoundView/>\r\n        )\r\n    }\r\n\r\n    if(status === \"resolved\") {\r\n        return (\r\n            <>\r\n                <SearchForm query={query} onChange={onChange} onSubmit={onSubmit}/>\r\n                {movies?.results && <SearchList movies={movies.results} location={location}/>}\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nSearch.propTypes = {\r\n    movies: PropTypes.shape({\r\n        results: PropTypes.arrayOf(PropTypes.object).isRequired\r\n    })\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport Search from 'components/Search/Search';\r\n\r\nconst SearchmovieView = () => {\r\n    return (\r\n        <div>\r\n            <Search/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchmovieView;"],"names":["BASE_URL","BASE_KEY","BASE_IMG","FetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesBySearch","query","fetchMovieById","movieId","fetchCreditsById","fetchReviewsById","navigate","useNavigate","useEffect","setTimeout","replace","style","textAlign","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useState","status","setStatus","movies","setMovies","setQuery","location","useLocation","renewSearch","URLSearchParams","search","get","fetchMovies","ThemoviedbAPI","then","catch","error","onChange","e","onSubmit","preventDefault","className","styles","type","map","movie","to","id","state","from","name","title","useFetchMoviesBySearch","results","Loader","NotFoundView"],"sourceRoot":""}